if (typeof _yuitest_coverage == "undefined"){
    _yuitest_coverage = {};
    _yuitest_coverline = function(src, line){
        var coverage = _yuitest_coverage[src];
        if (!coverage.lines[line]){
            coverage.calledLines++;
        }
        coverage.lines[line]++;
    };
    _yuitest_coverfunc = function(src, name, line){
        var coverage = _yuitest_coverage[src],
            funcId = name + ":" + line;
        if (!coverage.functions[funcId]){
            coverage.calledFunctions++;
        }
        coverage.functions[funcId]++;
    };
}
_yuitest_coverage["build/wireit-loader/wireit-loader.js"] = {
    lines: {},
    functions: {},
    coveredLines: 0,
    calledLines: 0,
    coveredFunctions: 0,
    calledFunctions: 0,
    path: "build/wireit-loader/wireit-loader.js",
    code: []
};
_yuitest_coverage["build/wireit-loader/wireit-loader.js"].code=["/* This file is auto-generated by src/loader/scripts/meta_join.js */","","YUI().use(function(Y) {","   var CONFIG = {","      groups: {","         'wireit': {","            base: 'wireit/src/',","            combine: false,","            modules: {","    \"arrow-wire\": {","        \"requires\": [","            \"wire-base\"","        ]","    },","    \"bezier-wire\": {","        \"requires\": [","            \"wire-base\"","        ]","    },","    \"bidirectional-arrow-wire\": {","        \"requires\": [","            \"wire-base\"","        ]","    },","    \"container\": {","        \"requires\": [","            \"container-base\",","            \"widget-icons\"","        ],","        \"skinnable\": true","    },","    \"container-base\": {","        \"requires\": [","            \"overlay\",","            \"widget-parent\",","            \"widget-child\",","            \"dd\",","            \"resize\",","            \"terminal\",","            \"wires-delegate\"","        ]","    },","    \"form-container\": {","        \"requires\": [","            \"container\",","            \"inputex-wirable-fields\"","        ],","        \"skinnable\": true","    },","    \"image-container\": {","        \"requires\": [","            \"container-base\"","        ]","    },","    \"inout-container\": {","        \"requires\": [","            \"container\"","        ]","    },","    \"inputex-wirable\": {","        \"requires\": [","            \"terminal\",","            \"inputex-field\"","        ]","    },","    \"inputex-wirable-fields\": {","        \"requires\": [","            \"inputex-wirable\",","            \"inputex-group\",","            \"inputex-string\",","            \"inputex-list\"","        ]","    },","    \"layer\": {","        \"requires\": [","            \"widget-parent\",","            \"container\",","            \"wires-delegate\"","        ],","        \"skinnable\": \"true\"","    },","    \"straight-wire\": {","        \"requires\": [","            \"wire-base\"","        ]","    },","    \"terminal\": {","        \"requires\": [","            \"terminal-base\",","            \"terminal-dragedit\",","            \"terminal-scissors\",","            \"terminal-ddgroups\"","        ],","        \"skinnable\": true","    },","    \"terminal-base\": {","        \"requires\": [","            \"widget\",","            \"widget-child\",","            \"widget-position\",","            \"widget-position-align\",","            \"wire-base\",","            \"wires-delegate\"","        ]","    },","    \"terminal-ddgroups\": {","        \"requires\": [","            \"terminal-dragedit\"","        ]","    },","    \"terminal-dragedit\": {","        \"requires\": [","            \"bezier-wire\",","            \"dd-drop\",","            \"dd-drag\",","            \"dd-proxy\"","        ]","    },","    \"terminal-input\": {","        \"requires\": [","            \"terminal\"","        ]","    },","    \"terminal-output\": {","        \"requires\": [","            \"terminal\"","        ]","    },","    \"terminal-scissors\": {","        \"requires\": [","            \"overlay\"","        ]","    },","    \"textarea-container\": {","        \"requires\": [","            \"container\"","        ]","    },","    \"widget-icons\": {","        \"requires\": [],","        \"skinnable\": true","    },","    \"wire-base\": {","        \"requires\": [","            \"graphics\"","        ],","        \"skinnable\": true","    },","    \"wireit-app\": {","        \"requires\": [","            \"app\",","            \"handlebars\",","            \"model\",","            \"model-list\",","            \"json\",","            \"view\",","            \"layer\",","            \"bezier-wire\",","            \"anim\"","        ]","    },","    \"wires-delegate\": {","        \"requires\": [","            \"wire-base\"","        ]","    }","}","         }","      }","   };","","   if(typeof YUI_config === 'undefined') { ","      YUI_config = {groups: {}}; ","   }","   else if(YUI_config.groups.inputex) {","      ","      // inputex-wirable trick","      // replace all 'inputex-field' dependencies in inputEx by 'inputex-wirable'","      for(var k in YUI_config.groups.inputex.modules) {","         if(YUI_config.groups.inputex.modules.hasOwnProperty(k)) {","            var m = YUI_config.groups.inputex.modules[k];","            if(m.requires) {","               var index = m.requires.indexOf('inputex-field');","               if(index != -1) {","                  m.requires[index] = 'inputex-wirable';","               }","            }","         }","      }","      ","   }","   Y.mix(YUI_config.groups, CONFIG.groups);","","});",""];
/* This file is auto-generated by src/loader/scripts/meta_join.js */

_yuitest_coverage["build/wireit-loader/wireit-loader.js"].lines = {"3":0,"4":0,"172":0,"173":0,"175":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"192":0};
_yuitest_coverage["build/wireit-loader/wireit-loader.js"].functions = {"(anonymous 1):3":0};
_yuitest_coverage["build/wireit-loader/wireit-loader.js"].coveredLines = 13;
_yuitest_coverage["build/wireit-loader/wireit-loader.js"].coveredFunctions = 1;
_yuitest_coverline("build/wireit-loader/wireit-loader.js", 3);
YUI().use(function(Y) {
   _yuitest_coverfunc("build/wireit-loader/wireit-loader.js", "(anonymous 1)", 3);
_yuitest_coverline("build/wireit-loader/wireit-loader.js", 4);
var CONFIG = {
      groups: {
         'wireit': {
            base: 'wireit/src/',
            combine: false,
            modules: {
    "arrow-wire": {
        "requires": [
            "wire-base"
        ]
    },
    "bezier-wire": {
        "requires": [
            "wire-base"
        ]
    },
    "bidirectional-arrow-wire": {
        "requires": [
            "wire-base"
        ]
    },
    "container": {
        "requires": [
            "container-base",
            "widget-icons"
        ],
        "skinnable": true
    },
    "container-base": {
        "requires": [
            "overlay",
            "widget-parent",
            "widget-child",
            "dd",
            "resize",
            "terminal",
            "wires-delegate"
        ]
    },
    "form-container": {
        "requires": [
            "container",
            "inputex-wirable-fields"
        ],
        "skinnable": true
    },
    "image-container": {
        "requires": [
            "container-base"
        ]
    },
    "inout-container": {
        "requires": [
            "container"
        ]
    },
    "inputex-wirable": {
        "requires": [
            "terminal",
            "inputex-field"
        ]
    },
    "inputex-wirable-fields": {
        "requires": [
            "inputex-wirable",
            "inputex-group",
            "inputex-string",
            "inputex-list"
        ]
    },
    "layer": {
        "requires": [
            "widget-parent",
            "container",
            "wires-delegate"
        ],
        "skinnable": "true"
    },
    "straight-wire": {
        "requires": [
            "wire-base"
        ]
    },
    "terminal": {
        "requires": [
            "terminal-base",
            "terminal-dragedit",
            "terminal-scissors",
            "terminal-ddgroups"
        ],
        "skinnable": true
    },
    "terminal-base": {
        "requires": [
            "widget",
            "widget-child",
            "widget-position",
            "widget-position-align",
            "wire-base",
            "wires-delegate"
        ]
    },
    "terminal-ddgroups": {
        "requires": [
            "terminal-dragedit"
        ]
    },
    "terminal-dragedit": {
        "requires": [
            "bezier-wire",
            "dd-drop",
            "dd-drag",
            "dd-proxy"
        ]
    },
    "terminal-input": {
        "requires": [
            "terminal"
        ]
    },
    "terminal-output": {
        "requires": [
            "terminal"
        ]
    },
    "terminal-scissors": {
        "requires": [
            "overlay"
        ]
    },
    "textarea-container": {
        "requires": [
            "container"
        ]
    },
    "widget-icons": {
        "requires": [],
        "skinnable": true
    },
    "wire-base": {
        "requires": [
            "graphics"
        ],
        "skinnable": true
    },
    "wireit-app": {
        "requires": [
            "app",
            "handlebars",
            "model",
            "model-list",
            "json",
            "view",
            "layer",
            "bezier-wire",
            "anim"
        ]
    },
    "wires-delegate": {
        "requires": [
            "wire-base"
        ]
    }
}
         }
      }
   };

   _yuitest_coverline("build/wireit-loader/wireit-loader.js", 172);
if(typeof YUI_config === 'undefined') { 
      _yuitest_coverline("build/wireit-loader/wireit-loader.js", 173);
YUI_config = {groups: {}}; 
   }
   else {_yuitest_coverline("build/wireit-loader/wireit-loader.js", 175);
if(YUI_config.groups.inputex) {
      
      // inputex-wirable trick
      // replace all 'inputex-field' dependencies in inputEx by 'inputex-wirable'
      _yuitest_coverline("build/wireit-loader/wireit-loader.js", 179);
for(var k in YUI_config.groups.inputex.modules) {
         _yuitest_coverline("build/wireit-loader/wireit-loader.js", 180);
if(YUI_config.groups.inputex.modules.hasOwnProperty(k)) {
            _yuitest_coverline("build/wireit-loader/wireit-loader.js", 181);
var m = YUI_config.groups.inputex.modules[k];
            _yuitest_coverline("build/wireit-loader/wireit-loader.js", 182);
if(m.requires) {
               _yuitest_coverline("build/wireit-loader/wireit-loader.js", 183);
var index = m.requires.indexOf('inputex-field');
               _yuitest_coverline("build/wireit-loader/wireit-loader.js", 184);
if(index != -1) {
                  _yuitest_coverline("build/wireit-loader/wireit-loader.js", 185);
m.requires[index] = 'inputex-wirable';
               }
            }
         }
      }
      
   }}
   _yuitest_coverline("build/wireit-loader/wireit-loader.js", 192);
Y.mix(YUI_config.groups, CONFIG.groups);

});

